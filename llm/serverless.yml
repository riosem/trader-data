service: trader-data-llm

frameworkVersion: "3"

provider:
  name: aws
  region: ${opt:region}
  runtime: python3.10
  deploymentBucket:
    name: ${param:deployment-bucket}
    serverSideEncryption: AES256
  timeout: 60
  environment:
    REGION: ${opt:region}
    DEPLOY_ENV: ${opt:stage}
    DATA_COLLECTION_BUCKET_NAME: ${self:custom.data_collection_bucket_name}
    EXECUTION_ROLE_ARN: ${self:custom.execution_role_arn}
    TASK_ROLE_ARN: ${self:custom.task_role_arn}
    OLLAMA_API_KEY: ${self:custom.ollama_api_key}
    PROVIDER_API_KEY: ${self:custom.provider_api_key}
    PROVIDER_API_URL: ${self:custom.provider_api_url}
    COINBASE_API_KEY: ${self:custom.coinbase_api_key}
    COINBASE_API_SECRET: ${self:custom.coinbase_api_secret} 
    AUTH0_ASSISTANT_AUDIENCE: ${self:custom.auth0_assistant_audience}
    ASSISTANT_API_KEY: ${self:custom.assistant_api_key}
    AUTH0_ASSISTANT_CLIENT_ID: ${self:custom.auth0_assistant_client_id}
    AUTH0_ASSISTANT_CLIENT_SECRET: ${self:custom.auth0_assistant_client_secret}
    AUTH0_OAUTH_URL: ${self:custom.env.auth0_oauth_url}
    CACHE_TABLE_NAME: ${self:custom.cache_table_name}
  tags:
    app_name: ${self:service}-${opt:stage}

custom:
  stage: ${opt:stage}
  region: ${opt:region}
  env: ${file(slsenvs.yml):${self:custom.stage}}
  execution_role_arn: arn:aws:iam::${aws.accountId}:role/${self:service}-task-execution-role-blue-${self:custom.stage}-${self:custom.region}
  task_role_arn: arn:aws:iam::${aws.accountId}:role/${self:service}-task-role-blue-${self:custom.stage}-${self:custom.region}
  ollama_api_key: ${param:ollama_api_key, '${self:custom.env.ollama_api_key}'}
  provider_api_key: ${param:provider_api_key, '${self:custom.env.provider_api_key}'}
  provider_api_url: ${param:provider_api_url, '${self:custom.env.provider_api_url}'}
  coinbase_api_key: ${param:provider_api_key, '${self:custom.env.coinbase_api_key}'}
  coinbase_api_secret: ${param:provider_api_secret, '${self:custom.env.coinbase_api_secret}'}
  auth0_assistant_client_id: ${param:auth0_assistant_client_id, '${self:custom.env.auth0_assistant_client_id}'}
  auth0_assistant_client_secret: ${param:auth0_assistant_client_secret, '${self:custom.env.auth0_assistant_client_secret}'}
  auth0_assistant_audience: ${param:auth0_assistant_audience, '${self:custom.env.auth0_assistant_audience}'}
  auth0_oauth_url: ${param:auth0_oauth_url, '${self:custom.env.auth0_oauth_url}'}
  assistant_api_key: ${param:assistant_api_key, '${self:custom.env.assistant_api_key}'}
  cache_table_name: ${param:cache_table_name, '${self:custom.env.cache_table_name}'}
  data_collection_bucket_name: ${param:data_collection_bucket_name, '${self:custom.env.data_collection_bucket_name}'}
  logRetentionInDays: 7
  pythonRequirements:
    dockerizePip: true
    slim: true
    layer:
      compatibleRuntimes:
        - python3.10

functions:
  prompt:
    handler: consumer.trend_analysis.scheduler_handler
    role: arn:aws:iam::${aws:accountId}:role/${self:service}-role-blue-${self:custom.stage}-${self:custom.region}
    timeout: 30
    layers:
      - Ref: PythonRequirementsLambdaLayer
      - arn:aws:lambda:us-east-2:336392948345:layer:AWSSDKPandas-Python310:23
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - PromptQueue
              - Arn

resources:
  Resources:
    PromptQueue:
      Type: AWS::SQS::Queue
      Properties:
        FifoQueue: true
        QueueName: ${self:service}-prompt-queue-${self:custom.stage}.fifo
        MessageRetentionPeriod: 60
        VisibilityTimeout: 300
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt PromptDLQ.Arn
          maxReceiveCount: 1
        Tags:
            - Key: app_name
              Value: ${self:provider.tags.app_name}
    PromptDLQ:
      Type: AWS::SQS::Queue
      Properties:
        FifoQueue: true
        QueueName: ${self:service}-prompt-dlq-${self:custom.stage}.fifo
        Tags:
          - Key: app_name
            Value: ${self:provider.tags.app_name}

plugins:
  - serverless-deployment-bucket
  - serverless-plugin-log-retention
